name: Check chef-lang

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:

  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path chef-lang/Cargo.toml 

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: set pythonpath
        run: |
          echo "PYTHONPATH=${{ github.workspace }}/chef-python/src" >> $GITHUB_ENV
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path chef-lang/Cargo.toml 
      - name: Run python tests
        run: |
          python "${{ github.workspace }}/chef-python/test.py"

  clippy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path chef-lang/Cargo.toml -- --deny warnings

  rustfmt:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3
        - uses: dtolnay/rust-toolchain@stable
          with:
              components: rustfmt
        - name: run rustfmt
          run: cargo fmt --manifest-path chef-lang/Cargo.toml --check

  build-with-nix:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
      - run: nix build
