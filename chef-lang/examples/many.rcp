block main(input: many) => (out: many) {
    a: int <- input[rail];
    b: int <- input[pump];

    // Combine signal to a many signal
    c: many <- a @ b;

    // TODO: Operate on evert signal in the many signal
    d: many <- input + 1;

    // This also works on binary operation (it defaults to "each" behavior)
    e: many <- input > 1;

    // Check if EVERY signal in the many signal satisfies the condition
    f: bool <- input @> 1;
    
    // Check if ANY signal in the many signal satisfies the condition
    g: bool <- input ?> 1;

    // TODO: You can also get the inputs if the statement is true like this
    // h: many <- input @> 1;
    // i: many <- input ?> 1;

    // NOTE: 'many' signal has to be on the left for boolean expressions with 'many' signals

    // TODO: Total count of signals in the many signal
    // count: int <- input!;

}
